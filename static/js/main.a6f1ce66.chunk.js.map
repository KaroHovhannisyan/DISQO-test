{"version":3,"sources":["common/components/ErrorBoundary/index.tsx","common/layouts/MainLayout.tsx","configs/constants.ts","common/components/Button/index.tsx","common/components/Input/index.tsx","common/components/EditableElement/index.tsx","common/components/Tabs/index.tsx","common/components/Chart/Chart.tsx","common/components/Note/Note.tsx","modules/Notepad/redux/actions/index.ts","modules/Dashboard/redux/actions/index.ts","modules/Dashboard/containers/Charts.tsx","modules/Dashboard/index.tsx","modules/Notepad/NotepadDemo.tsx","utils/helperFunctions.ts","modules/Notepad/Notepad.tsx","Routes.tsx","App.tsx","reportWebVitals.ts","modules/Notepad/redux/reducer/NotepadsReducer.ts","modules/Dashboard/redux/reducer/GistsReducer.ts","redux/reducers/index.ts","common/service/GithubApiClient.ts","common/service/HttpClient.ts","modules/Notepad/dataAdapter/dataAdapter.ts","modules/Notepad/redux/saga/NotepadSaga.ts","modules/Dashboard/redux/saga/GistsSaga.ts","redux/sagas/index.ts","redux/setupStore.ts","index.tsx"],"names":["ErrorBoundary","props","state","hasError","error","errorInfo","this","setState","children","className","onClick","global","window","location","reload","Component","MainLayout","CREATE_NOTEPAD","Button","text","rest","Input","placeholder","htmlFor","EditableElement","onChange","element","useRef","elements","React","Children","toArray","length","Error","cloneElement","contentEditable","suppressContentEditableWarning","ref","onBlur","value","current","innerText","Tabs","entries","useState","title","activeTab","setActiveTab","map","entry","render","Chart","data","ResponsiveContainer","width","height","LineChart","margin","top","right","left","bottom","CartesianGrid","strokeDasharray","XAxis","dataKey","YAxis","Tooltip","Legend","Line","type","stroke","Brush","Note","onNoteChange","onNoteRemove","saved","setSaved","handleChange","key","id","setTimeout","description","GET_NOTEPADS","GET_NOTEPADS_SUCCESS","REMOVE_NOTEPAD_BY_ID","REMOVE_NOTEPAD_BY_ID_SUCCESS","ADD_NOTEPAD","ADD_NOTEPAD_SUCCESS","EDIT_NOTEPAD","GET_NOTEPAD_BY_ID","GET_NOTEPAD_BY_ID_SUCCESS","REMOVE_NOTE_BY_ID","REMOVE_NOTE_BY_ID_SUCCESS","getNotepadsSuccess","payload","addNotepadSuccess","editNotepad","getNotepadByIdSuccess","GET_PUBLIC_GISTS","GET_PUBLIC_GISTS_SUCCES","getPublicGists","Charts","dispatch","useDispatch","loading","setLoading","gistCreated","useSelector","publicGists","filesPerGist","useEffect","gistCreatedData","useMemo","e","name","moment","Date","date","format","filesPerGistData","created_at","Object","keys","files","disabled","Dashboard","history","useHistory","notepads","shallowEqual","push","notepad","notesCount","notesLength","createdAt","NotepadDemo","CREATE_ROUTE_FOR_NOTEPAD","stopPropagation","removeNotepadById","generateId","Math","random","toString","substr","deepClone","JSON","parse","stringify","groupByDate","forSeconds","result","timeDiff","getTime","forEach","dateInMiliSeconds","NotePad","createMode","notes","setNotes","setTitle","useParams","idMap","getNotepadById","handleNoteChange","useCallback","notesClone","foundIndex","findIndex","note","handleNoteRemove","removeNoteById","src","alt","cb","addNotepad","currentTarget","notepadName","Routes","exact","path","component","Notepad","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","notepadReducer","action","notepadId","noteId","idMapClone","content","stateClone","filter","page","gistsReducer","rootReducer","combineReducers","notePadsReducer","GithubApiClient","baseURL","process","headers","Authorization","get","getById","delete","create","post","update","patch","options","_baseURL","_headers","endpoint","a","fetch","res","ok","statusText","status","json","undefined","_fetchJSON","method","body","operations","parseResponse","adaptNotepads","getNotepads","editNotepadById","fetchDataWatcher","GithubApi","call","put","console","takeLatest","select","store","gistCreatedPage","gists","reverse","rootSaga","all","fork","notepadSaga","gistsSaga","setupStore","sagaMiddleware","createSagaMiddleware","middleware","applyMiddleware","isDevelopment","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","realMiddleware","createStore","run","OLD_REDUX_STORE","localStorage","getItem","REDUX_INITIAL_STATE","ReactDOM","StrictMode","document","getElementById"],"mappings":"mMAYqBA,E,kDAInB,WAAYC,GAA6B,IAAD,8BACtC,cAAMA,IACDC,MAAQ,CACXC,UAAU,GAH0B,E,qDAWxC,SAAkBC,EAAcC,GAC9BC,KAAKC,SAAS,CAAEF,YAAWD,Y,oBAG7B,WAAU,IACAD,EAAaG,KAAKJ,MAAlBC,SACAK,EAAaF,KAAKL,MAAlBO,SAER,OAAIL,EAEA,8BACE,8BACE,yEAGE,sBACEM,UAAU,OACVC,QAAS,WACPC,EAAOC,OAAOC,SAASC,UAH3B,qCAcHN,K,uCAjCT,SAAgCJ,GAC9B,MAAO,CAAED,UAAU,EAAMC,a,GAZcW,e,yQCF5BC,EAJsB,SAAC,GACpC,OADqD,EAAfR,UCA3BS,EAAyB,U,yCCQvBC,EAJkB,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,KAASC,EAAW,wBACtD,OAAO,kDAAYA,GAAZ,aAAmBD,MCWbE,G,OAXiB,SAAC,GAA8B,IAA5BC,EAA2B,EAA3BA,YAAgBF,EAAW,+BAC5D,OACE,sBAAKX,UAAU,oBAAf,UACE,mCAAOa,YAAaA,EAAab,UAAU,eAAkBW,IAC7D,uBAAOG,QAASD,EAAab,UAAU,cAAvC,SACGa,S,SCcME,EA5BS,SAACvB,GAGL,IACVwB,EAAaxB,EAAbwB,SACFC,EAAUC,mBACZC,EAAWC,IAAMC,SAASC,QAAQ9B,EAAMO,UAC5C,GAAIoB,EAASI,OAAS,EACpB,MAAMC,MAAM,kCAiBd,OAPAL,EAAWC,IAAMK,aAAaN,EAAS,GAAI,CACzCO,iBAAiB,EACjBC,gCAAgC,EAChCC,IAAKX,EACLY,OAZa,WAAO,IAAD,IACbC,GAAQ,UAAAb,EAAQc,eAAR,eAAiBD,SAAjB,UAA0Bb,EAAQc,eAAlC,aAA0B,EAAiBC,WACrDhB,GAAYc,GACdd,EAASc,OCuBAG,G,OA5BgB,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QAAc,EACZd,IAAMe,SAASD,EAAQ,GAAGE,OADd,mBACvCC,EADuC,KAC5BC,EAD4B,KAE9C,OACE,qCACE,qBAAKtC,UAAU,MAAf,SACGkC,EAAQK,KAAI,SAACC,GAAD,OACX,wBACExC,UAAWwC,EAAMJ,QAAUC,EAAY,aAAe,GAEtDpC,QAAS,kBAAMqC,EAAaE,EAAMJ,QAHpC,SAKGI,EAAMJ,OAHFI,EAAMJ,YAQhBF,EAAQK,KAAI,SAACC,GAAD,OACX,qBACExC,UAAS,qBAAgBqC,IAAcG,EAAMJ,MAAQ,SAAW,IADlE,SAIGI,EAAMC,UAFFD,EAAMJ,e,+ECmBNM,EA/BiB,SAAC,GAAqB,IAAnBN,EAAkB,EAAlBA,MAAOO,EAAW,EAAXA,KACxC,OACE,qCACE,qBAAK3C,UAAU,qBAAf,SACE,6BAAKoC,MAEP,cAACQ,EAAA,EAAD,CAAqBC,MAAM,OAAOC,OAAO,OAAzC,SACE,eAACC,EAAA,EAAD,CACEF,MAAO,IACPC,OAAQ,IACRH,KAAMA,EACNK,OAAQ,CACNC,IAAK,EACLC,MAAO,GACPC,KAAM,GACNC,OAAQ,GARZ,UAWE,cAACC,EAAA,EAAD,CAAeC,gBAAgB,QAC/B,cAACC,EAAA,EAAD,CAAOC,QAAQ,SACf,cAACC,EAAA,EAAD,IACA,cAACC,EAAA,EAAD,IACA,cAACC,EAAA,EAAD,IACA,cAACC,EAAA,EAAD,CAAMC,KAAK,WAAWL,QAAQ,SAASM,OAAO,YAC9C,cAACC,EAAA,EAAD,aCGKC,G,OAjCgB,SAAC,GAA0C,IAAxCrB,EAAuC,EAAvCA,KAAMsB,EAAiC,EAAjCA,aAAcC,EAAmB,EAAnBA,aAAmB,EAC7C9C,IAAMe,UAAS,GAD8B,mBAChEgC,EADgE,KACzDC,EADyD,KAGjEC,EAAe,SAACC,EAAaxC,EAAeyC,GAChDN,EAAaK,EAAKxC,EAAOyC,GACzBH,GAAS,GACTI,YAAW,WACTJ,GAAS,KACR,MAGL,OACE,6BACE,sBAAKpE,UAAU,UAAf,UACE,mBAAGA,UAAU,eAAeC,QAAS,kBAAMiE,EAAavB,MACxD,cAAC,EAAD,CACE3B,SAAU,SAACc,GAAD,OAAmBuC,EAAa,QAASvC,EAAOa,EAAK4B,KADjE,SAGE,qBAAKvE,UAAU,SAAf,SAAyB2C,EAAKP,UAEhC,cAAC,EAAD,CACEpB,SAAU,SAACc,GAAD,OACRuC,EAAa,cAAevC,EAAOa,EAAK4B,KAF5C,SAKE,mBAAGvE,UAAU,OAAb,SAAqB2C,EAAK8B,gBAE3BN,GAAS,mBAAGnE,UAAU,oBAAb,0B,QCpCL0E,EAAuB,eACvBC,EAA+B,uBAG/BC,EAA+B,uBAC/BC,EACX,+BAEWC,EAAsB,cACtBC,EAA8B,sBAE9BC,EAAuB,eAGvBC,EAA4B,oBAC5BC,EAAoC,4BAEpCC,EAA4B,oBAC5BC,EAAoC,4BAGpCC,EAAqB,SAAC1C,GAAD,MAAgB,CAChDkB,KAAMc,EACNW,QAAS,CAAE3C,UAkBA4C,EAAoB,SAAC5C,GAAD,MAAqB,CACpDkB,KAAMkB,EACNO,QAAS,CAAE3C,UAGA6C,EAAc,SAAC7C,EAAW4B,GAAZ,MAA4B,CACrDV,KAAMmB,EACNM,QAAS,CAAE3C,OAAM4B,QAaNkB,EAAwB,SAAC9C,GAAD,MAAgB,CACnDkB,KAAMqB,EACNI,QAAS,CAAE3C,U,iBCjEA+C,EAA2B,mBAC3BC,EAAkC,0BAElCC,EAAiB,iBAAO,CAAE/B,KAAM6B,ICuD9BG,EAlDA,WACb,IAAMC,EAAWC,cADE,EAEW3E,IAAMe,UAAS,GAF1B,mBAEZ6D,EAFY,KAEHC,EAFG,KAGbC,EAAuBC,aAC3B,SAAC1G,GAAD,OAAsBA,EAAM2G,YAAYF,eAEpCG,EAAwBF,aAC5B,SAAC1G,GAAD,OAAsBA,EAAM2G,YAAYC,gBAG1CjF,IAAMkF,WAAU,WACdR,EAASF,OACR,CAACE,IAEJ,IAAMS,EAAkBnF,IAAMoF,SAAQ,WACpC,OAAON,EAAY3D,KAAI,SAACkE,GAAD,MAAe,CACpCC,KAAMC,IAAO,IAAIC,MAAMH,EAAEI,OAAOC,OAAO,oBACvCvF,OAAQkF,EAAE9D,KAAKpB,aAEhB,CAAC2E,IAEEa,EAAmB3F,IAAMoF,SAAQ,WACrC,OAAOH,EAAa9D,KAAI,SAACkE,GAAD,MAAe,CACrCC,KAAMC,IAAOF,EAAEO,YAAYF,OAAO,oBAClCvF,OAAQ0F,OAAOC,KAAKT,EAAEU,OAAO5F,aAE9B,CAAC8E,IAWJ,OACE,sBAAKrG,UAAU,SAAf,UACE,cAAC,EAAD,CACEU,KAAMsF,EAAU,aAAe,aAC/B/F,QAbiB,WACrB6F,EAASF,KACTK,GAAW,GAEXzB,YAAW,WACTyB,GAAW,KACV,MAQCmB,SAAUpB,IAEZ,cAAC,EAAD,CAAO5D,MAAM,gBAAgBO,KAAM4D,IACnC,cAAC,EAAD,CAAOnE,MAAM,iBAAiBO,KAAMoE,QCc3BM,G,OAvDG,WAChB,IAAMC,EAAUC,cACVzB,EAAWC,cAEXyB,EAAuBrB,aAC3B,SAAC1G,GAAD,OAAsBA,EAAM+H,SAAS7E,OACrC8E,KAOF,OAJArG,IAAMkF,WAAU,WACdR,EHA8B,CAAEjC,KAAMa,MGCrC,CAACoB,IAGF,qBAAK9F,UAAU,YAAf,SACE,cAAC,EAAD,CACEkC,QAAS,CACP,CACEE,MAAO,WACPK,OAAQ,kBACN,qCACE,sBAAKzC,UAAU,qBAAf,UACE,6CACA,cAAC,EAAD,CACEU,KAAM,iBACNT,QAAS,kBAAMqH,EAAQI,KAAKlH,SAGhC,sBAAKR,UAAU,WAAf,iBACGwH,QADH,IACGA,OADH,EACGA,EAAUjF,KAAI,SAACoF,GAAD,aACb,cAAC,GAAD,CACEvF,MAAK,UAAKuF,EAAQvF,OAClBwF,WAAU,UAAED,EAAQE,mBAAV,QAAyB,EACnCtD,GAAIoD,EAAQpD,GAEZuD,UAAWH,EAAQG,WADdH,EAAQpD,OAIfiD,EAASjG,OAEP,KADF,2EAMV,CACEa,MAAO,SACPK,OAAQ,kBAAM,cAAC,EAAD,aCjBXsF,I,OA3BuB,SAAC,GAKhC,IAJLxD,EAII,EAJJA,GACAnC,EAGI,EAHJA,MACAwF,EAEI,EAFJA,WACAE,EACI,EADJA,UAEMR,EAAUC,cACVzB,EAAWC,cAOjB,OACE,sBACE/F,UAAU,WACVC,QAAS,kBAAMqH,EAAQI,KXxBmC,SAACnD,GAAD,0BACjDA,GWuBmByD,CAAyBzD,KAFvD,UAIE,mBAAGvE,UAAU,eAAeC,QAVJ,SAACwG,GAC3BA,EAAEwB,kBACFnC,EJE6B,SAACvB,GAAD,MAAiB,CAChDV,KAAMe,EACNU,QAAS,CAAEf,OIJA2D,CAAkB3D,OASzB,6BAAKnC,IACL,wCAAWwF,KACX,mBAAG5H,UAAU,OAAb,SAAqB2G,IAAOmB,GAAWhB,OAAO,uB,SCnCvCqB,GAAa,WACxB,MAAO,IAAMC,KAAKC,SAASC,SAAS,IAAIC,OAAO,EAAG,IAGvCC,GAAY,SAAI7F,GAC3B,OAAO8F,KAAKC,MAAMD,KAAKE,UAAUhG,KAGtBiG,GAAc,SACzBjG,EACAkG,GAEA,IAAMC,EAAiC,GACnCC,EAAW,IAAInC,KAAKjE,EAAK,GAAGqE,YAAYgC,UAAyB,IAAbH,EAgBxD,OAdAlG,EAAKsG,SAAQ,SAAChI,GACZ,IAAMiI,EAAoB,IAAItC,KAAK3F,EAAQ+F,YAAYgC,UACnDE,GAAqBH,EACnBD,EAAOC,GACTD,EAAOC,GAAUrB,KAAKzG,GAEtB6H,EAAOC,GAAY,CAAC9H,GAItB6H,EADAC,EAAWG,EAAoB,KACZ,CAACjI,MAIjBgG,OAAOC,KAAK4B,GAAQvG,KAAI,SAACsE,GAAD,MAAmB,CAChDA,OACAlE,KAAMmG,EAAOjC,QCuGFsC,GAlHmB,SAAC,GAAoB,IAAlBC,EAAiB,EAAjBA,WAAiB,EAC1BhI,IAAMe,SAAkB,IADE,mBAC7CkH,EAD6C,KACtCC,EADsC,OAE1BlI,IAAMe,SAAS,IAFW,mBAE7CC,EAF6C,KAEtCmH,EAFsC,KAI5ChF,EAAuBiF,cAAvBjF,GACFuB,EAAWC,cACXuB,EAAUC,cAEVI,EAAoBxB,aACxB,SAAC1G,GAAD,OAAsBA,EAAM+H,SAASiC,MAAMlF,MAG7CnD,IAAMkF,WAAU,WACT8C,GACHtD,ENsBwB,SAACvB,GAAD,MAAiB,CAC7CV,KAAMoB,EACNK,QAAS,CAAEf,OMxBEmF,CAAenF,MAEzB,CAAC6E,EAAYtD,EAAUvB,IAE1BnD,IAAMkF,WAAU,WACTqB,IACL4B,EAAQ,OAAC5B,QAAD,IAACA,OAAD,EAACA,EAASvF,OAClBkH,EAAQ,OAAC3B,QAAD,IAACA,OAAD,EAACA,EAAS0B,UACjB,CAAC1B,IAEJ,IAgBMgC,EAAmBvI,IAAMwI,aAC7B,SAACtF,EAAaxC,EAAeyC,GAC3B,IAAMsF,EAAarB,GAAUa,GACvBS,EAAaD,EAAWE,WAAU,SAACC,GAAD,OAAiBA,EAAKzF,KAAOA,KACjEzC,IAAU+H,EAAWC,GAAYxF,KACnCuF,EAAWC,GAAYxF,GAAOxC,EAC9BwH,EAASO,GACJT,GACHtD,EAASN,EAAYqE,EAAWC,GAAanC,EAAQpD,QAI3D,CAAC8E,EAAOvD,EAAU6B,EAASyB,IAQvBa,EAAmB7I,IAAMwI,aAC7B,SAACI,GACClE,ENhBwB,SAACnD,EAAa4B,GAAd,MAA8B,CAC1DV,KAAMsB,EACNG,QAAS,CAAE3C,OAAM4B,OMcJ2F,CAAeF,EAAMrC,EAAQpD,OAExC,CAACoD,IAGH,OACE,gCACE,sBAAK3H,UAAU,SAAf,UACE,sBAAKA,UAAU,OAAOC,QAAS,kBAAMqH,EAAQI,KbxFpB,MawFzB,UACE,qBACEyC,IAAI,wDACJC,IAAI,SAEN,8CAEDhB,GACC,cAAC,EAAD,CACE1I,KAAK,iBACLT,QAjDgB,WACxB6F,ENhBsB,SAAC6B,EAAmB0C,GAApB,MAAwC,CAChExG,KAAMiB,EACNQ,QAAS,CAAEqC,UAAS0C,OMehBC,CACE,CAAElI,QAAOiH,QAAO9E,GAAI4D,KAAcL,UAAW,IAAIlB,OACjD,kBAAMU,EAAQI,KbrDW,UamGrBN,UAAWhF,IAAUiH,EAAM9H,YAKjC,uBAEA,sBAAKvB,UAAU,qCAAf,UACE,cAAC,EAAD,CACE0G,KAAK,QACL7F,YAAY,eACZG,SAAU,SAACyF,GAAD,OAAO8C,EAAS9C,EAAE8D,cAAczI,QAC1CD,OAtCyB,WAC3BuH,GACJtD,EAASN,EAAY,CAAEgF,YAAapI,GAASuF,EAAQpD,MAqC/CzC,MAAOM,IAET,cAAC,EAAD,CAAQ1B,KAAK,WAAWT,QAxER,WACpBqJ,EAAS,GAAD,oBACHD,GADG,CAEN,CAAEjH,MAAO,QAASqC,YAAa,cAAeF,GAAI4D,eAuElD,qBAAKnI,UAAU,YAAf,SACE,oCACGqJ,QADH,IACGA,OADH,EACGA,EAAO9G,KAAI,SAACyH,GAAD,OACV,cAAC,EAAD,CAEErH,KAAMqH,EACN/F,aAAc0F,EACdzF,aAAc+F,GAHTD,EAAKzF,eCtGTkG,GAhBU,WACvB,OACE,cAAC,EAAD,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,OAAK,EAACC,KdNY,IcMKC,UAAWvD,IACzC,cAAC,IAAD,CACEqD,OAAK,EACLC,KAAMnK,EACNiC,OAAQ,kBAAM,cAACoI,GAAD,CAASzB,YAAY,OAErC,cAAC,IAAD,CAAOsB,OAAK,EAACC,KdTgB,gBcSKC,UAAWC,W,OCCtCC,OAVf,WACE,OACE,cAAC,IAAD,UACE,cAACvL,EAAA,EAAD,UACE,cAAC,GAAD,SCGOwL,GAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,mBCORQ,GAAqC,CACzC7I,KAAM,GACN8G,MAAO,IA4DMgC,GAzDQ,WAGjB,IAFJhM,EAEG,uDAFK+L,GACRE,EACG,uCACK7H,EACN6H,EADM7H,KADL,EAED6H,EADYpG,QAAW3C,GADtB,aACuD,CAAEA,KAAM,IAD/D,GACsBA,KADtB,IAC4BgJ,iBAD5B,MACwC,GADxC,EAC4CC,EAD5C,EAC4CA,OAEzCC,EAAarD,GAAU/I,EAAMgK,OACnC,OAAQ5F,GACN,KAAKc,EACH,OAAO,2BACFlF,GADL,IAEEkD,SAEJ,KAAKuC,EAWH,OAVA2G,EAAWlJ,EAAK4B,IAAM,CACpBA,GAAI5B,EAAK4B,GACTnC,MAAOO,EAAK8B,YACZ4E,MAAOpC,OAAOC,KAAKvE,EAAKwE,OAAO5E,KAAI,SAAC+B,GAAD,MAAU,CAC3ClC,MAAOkC,EACPG,YAAa9B,EAAKwE,MAAM7C,GAAKwH,QAC7BvH,GAAI4D,UAID,2BACF1I,GADL,IAEEgK,MAAOoC,IAEX,KAAK9G,EACH,IAAMgH,EAAmCvD,GAAU/I,GAGnD,OAFAsM,EAAWpJ,KAAK+E,KAAK/E,GACrBoJ,EAAWtC,MAAM9G,EAAK4B,IAAM5B,EACrBoJ,EAET,KAAKlH,EACH,OAAO,2BACFpF,GADL,IAEEkD,KAAMlD,EAAMkD,KAAKqJ,QACf,SAACrE,GAAD,OAAaA,EAAQpD,KAAOmH,EAAOpG,QAAQ3C,UAIjD,KAAKyC,EAKH,OAJAyG,EAAWF,GAAWtC,MAAQwC,EAAWF,GAAWtC,MAAM2C,QACxD,SAAChC,GAAD,OAAiBA,EAAKzF,KAAOqH,KAGxB,2BACFnM,GADL,IAEEgK,MAAOoC,IAGX,QACE,OAAOpM,IChEP+L,GAAqC,CACzCnF,aAAc,GACdH,YAAa,GACb+F,KAAM,GAsBOC,GAnBM,WAGf,IAFJzM,EAEG,uDAFK+L,GACRE,EACG,uCACK7H,EAAkB6H,EAAlB7H,KAAMyB,EAAYoG,EAAZpG,QACd,OAAQzB,GACN,KAAK8B,EACH,OAAO,2BACFlG,GADL,IAEEyG,YAAY,GAAD,oBAAMZ,EAAQY,aAAd,aAA8BzG,EAAMyG,cAC/CG,aAAa,GAAD,oBAAMf,EAAQe,cAAd,aAA+B5G,EAAM4G,eACjD4F,KAAMxM,EAAMwM,KAAO,IAGvB,QACE,OAAOxM,ICdE0M,GAPKC,aAAgB,CAClC5E,SAAU6E,GACVjG,YAAa8F,K,sFCmBAI,G,oDA1Bb,aAAe,wCACP,CACJC,QpBWJC,yBoBVIC,QAAS,CACPC,cAAc,SAAD,OpBOnBF,+C,2CoBFA,WAAgB,IAAD,OACb,MAAO,CACLG,IAAK,kBAAM,EAAKA,IAAI,WACpBC,QAAS,SAACrI,GAAD,OAAgB,EAAKoI,IAAL,iBAAmBpI,KAC5CsI,OAAQ,SAACtI,GAAD,OAAgB,EAAKsI,OAAL,iBAAsBtI,KAC9CuI,OAAQ,SAACnF,GAAD,OAAuB,EAAKoF,KAAK,SAAUpF,IACnDqF,OAAQ,SAACrF,GAAD,OAAkB,EAAKsF,MAAL,iBAAqBtF,EAAQpD,IAAMoD,O,iBAIjE,WAAa,IAAD,OACV,MAAO,CACL/B,eAAgB,SAACqG,GAAD,OAAkB,EAAKU,IAAL,6BAA+BV,U,cCjBrE,aAAqC,IAAzBiB,EAAwB,uDAAJ,GAAI,0BAH5BC,cAG4B,OAF5BC,cAE4B,EAClCvN,KAAKsN,SAAWD,EAAQX,SAAW,GACnC1M,KAAKuN,SAAWF,EAAQT,SAAW,G,wFAGrC,WAAiBY,GAAjB,8BAAAC,EAAA,6DAAmCJ,EAAnC,+BAA6C,GAA7C,SACoBK,MAAM1N,KAAKsN,SAAWE,EAAjB,YAAC,eACnBH,GADkB,IAGrBT,QAAS5M,KAAKuN,YAJlB,WACQI,EADR,QAOWC,GAPX,sBAOqB,IAAIjM,MAAMgM,EAAIE,YAPnC,UASqB,MAAfF,EAAIG,OATV,yCASiCH,EAAII,QATrC,qCAWSC,GAXT,gD,wEAcA,SAAIR,GAAiC,IAAfH,EAAc,uDAAJ,GAC9B,OAAOrN,KAAKiO,WAAWT,EAAhB,2BACFH,GADE,IAELa,OAAQ,W,kBAIZ,SAAQV,EAAkBW,GAAwB,IAAfd,EAAc,uDAAJ,GAC3C,OAAOrN,KAAKiO,WAAWT,EAAhB,2BACFH,GADE,IAELc,KAAMA,EAAOvF,KAAKE,UAAUqF,QAAQH,EACpCE,OAAQ,Y,iBAIZ,SAAOV,EAAkBW,GAAwB,IAAfd,EAAc,uDAAJ,GAC1C,OAAOrN,KAAKiO,WAAWT,EAAhB,2BACFH,GADE,IAELc,KAAMA,EAAOvF,KAAKE,UAAUqF,QAAQH,EACpCE,OAAQ,W,mBAIZ,SAASV,EAAkBY,GAA8B,IAAff,EAAc,uDAAJ,GAClD,OAAOrN,KAAKiO,WAAWT,EAAhB,yBACLa,eAAe,GACZhB,GAFE,IAGLc,KAAMvF,KAAKE,UAAUsF,GACrBF,OAAQ,a,oBAIZ,SAAOV,GAAiC,IAAfH,EAAc,uDAAJ,GACjC,OAAOrN,KAAKiO,WAAWT,EAAhB,yBACLa,eAAe,GACZhB,GAFE,IAGLa,OAAQ,gB,MChEDI,GAAgB,SAACxL,GAC5B,OAAOA,EAAKJ,KAAI,SAACoF,GAAD,MAAmB,CACjCpD,GAAIoD,EAAQpD,GACZnC,MAAOuF,EAAQlD,YACfoD,YAAaZ,OAAOC,KAAKS,EAAQR,OAAO5F,OACxCuG,UAAWH,EAAQX,gB,aCgBNoH,I,aASAlG,I,aAYAmG,I,aA+BA/D,I,aA4BAZ,I,aAYAQ,I,aAqBQoE,IAnHnBC,GAAY,IAAIjC,GAEf,SAAU8B,KAAV,wEAE6B,OAF7B,kBAEmCI,aAAKD,GAAU/G,SAASmF,KAF3D,OAGH,OADMhK,EAFH,gBAGG8L,aAAIpJ,EAAmB8I,GAAcxL,KAHxC,uDAKH+L,QAAQ/O,MAAR,MALG,sDASA,SAAUuI,GAAkBwD,GAA5B,wEAKH,OAHWnH,EACTmH,EADFpG,QAAWf,GAFR,kBAKGiK,aAAKD,GAAU/G,SAASqF,OAAQtI,GALnC,OAMH,OANG,SAMGkK,ahBHgD,CACxD5K,KAAMgB,EACNS,QAAS,CAAE3C,KgBCyB4B,KAN/B,uDAQHmK,QAAQ/O,MAAR,MARG,sDAYA,SAAU0O,GACf3C,GADK,uFAQDA,EADFpG,QAAW3C,EAPR,EAOQA,KAAM4B,EAPd,EAOcA,GAPd,SAUKiG,EAAoC7H,EAApC6H,YAAapI,EAAuBO,EAAvBP,MAAOqC,EAAgB9B,EAAhB8B,aACxB+F,EAXD,gBAYD,OAZC,SAYKgE,aAAKD,GAAU/G,SAASwF,OAAQ,CACpCzI,KACAE,YAAa9B,EAAK6H,cAdnB,8BAiBD,OAjBC,UAiBKgE,aAAKD,GAAU/G,SAASwF,OAAQ,CACpCzI,KACA4C,MAAM,0BACA/E,GAAU,CACZ0J,QAASrH,MArBd,0DA2BHiK,QAAQ/O,MAAR,MA3BG,uDA+BA,SAAU2K,GACfoB,GADK,gFAgBoB,OAhBpB,EAKDA,EADFpG,QAAWqC,EAJR,EAIQA,QAAS0C,EAJjB,EAIiBA,GAGhBlD,EAAsB,GAE5BQ,EAAQ0B,MAAMJ,SAAQ,SAACe,GACrB7C,EAAM6C,EAAK5H,OAAS,CAClB0J,QAAS9B,EAAKvF,gBAXb,kBAgB0B+J,aAAKD,GAAU/G,SAASsF,OAAQ,CAC3DrI,YAAakD,EAAQvF,MACrB+E,UAlBC,OAoBH,OAJMxE,EAhBH,gBAoBG8L,aAAIlJ,EAAkB5C,IApBzB,OAsBH0H,IAtBG,kDAwBHqE,QAAQ/O,MAAR,MAxBG,uDA4BA,SAAU+J,GAAegC,GAAzB,0EAKwB,OAHhBnH,EACTmH,EADFpG,QAAWf,GAFR,kBAK8BiK,aAAKD,GAAU/G,SAASoF,QAASrI,GAL/D,OAMH,OADM5B,EALH,gBAMG8L,aAAIhJ,EAAsB9C,IAN7B,uDAQH+L,QAAQ/O,MAAR,MARG,sDAYA,SAAUuK,GACfwB,GADK,4EAOH,OAPG,EAKDA,EADFpG,QAAWf,EAJR,EAIQA,GAAI5B,EAJZ,EAIYA,KAJZ,kBAOG6L,aAAKD,GAAU/G,SAASwF,OAAQ,CACpCzI,KACA4C,MAAM,0BACAxE,EAAKP,OAAU,CACjB0J,QAAS,OAXZ,OAeH,OAfG,SAeG2C,chBvD4B9C,EgBuDFpH,EhBvDqBqH,EgBuDjBjJ,EAAK4B,GhBvDgC,CAC3EV,KAAMuB,EACNE,QAAS,CAAEqG,YAAWC,agBsCjB,uDAiBH8C,QAAQ/O,MAAR,MAjBG,kChBxC8B,IAACgM,EAAmBC,IgBwClD,iBAqBQ,SAAU0C,KAAV,kEACb,OADa,SACPK,aAAW7J,EAAawF,IADjB,OAEb,OAFa,SAEPqE,aAAWjK,EAAc0J,IAFlB,OAGb,OAHa,SAGPO,aAAW/J,EAAsBsD,IAH1B,OAIb,OAJa,SAIPyG,aAAW3J,EAAcqJ,IAJlB,OAKb,OALa,UAKPM,aAAW1J,EAAmByE,IALvB,QAMb,OANa,UAMPiF,aAAWxJ,EAAmB+E,IANvB,yC,iBC7HEtE,I,aAgBQ0I,IAlBnBC,GAAY,IAAIjC,GAEf,SAAU1G,KAAV,0EAE6B,OAF7B,kBAEmCgJ,cACpC,SAACC,GAAD,OAAsBA,EAAMzI,YAAY6F,QAHvC,OAMmB,OAJhB6C,EAFH,gBAMyBN,aAC1BD,GAAUQ,MAAMnJ,eAChBkJ,GARC,OAUH,OAJMnM,EANH,gBAUG8L,chBf4BvI,EgBeF0C,GAAYjG,EAAKqM,UAAW,GhBfe,CAC7EnL,KAAM8B,EACNL,QAAS,CAAEY,cAAaG,agBa0C1D,MAV7D,yDAYH+L,QAAQ/O,MAAR,MAZG,kChBL8B,IAACuG,IgBK/B,kBAgBQ,SAAUoI,KAAV,kEACb,OADa,SACPK,aAAWjJ,EAAkBE,IADtB,wC,iBCpBLqJ,IAAV,SAAUA,KAAV,kEACE,OADF,SACQC,aAAI,CAACC,aAAKC,IAAcD,aAAKE,MADrC,wCAIeJ,UCuBAK,OA3Bf,WAAwC,IAApB9D,EAAmB,uDAAJ,GAE3B+D,EAAiBC,eAEjBC,EAAaC,KAAe,WAAf,EAAmB,CAACH,IAEjCI,GAAgBnD,EAEhBoD,EAAmBD,GACpBxP,OAAe0P,sCAChBC,KAEEC,EAAiBJ,EACnBC,EAAiBH,GACjBA,EAGEZ,EAAQmB,aAAY7D,GAAaX,EAAcuE,GAKrD,OAFAR,EAAeU,IAAIhB,IAEZJ,GCnBHqB,GAAkBC,aAAaC,QAAQ,iBAEzCC,GAAsB,GAEtBH,KACFG,GAAsB5H,KAAKC,MAAMwH,KAGnC,IAAMrB,GAAQS,GAAWe,IAEzBC,IAAS7N,OACP,cAAC,IAAM8N,WAAP,UACE,cAAC,IAAD,CAAU1B,MAAOA,GAAjB,SACE,cAAC,GAAD,QAGJ2B,SAASC,eAAe,SAM1B1F,O","file":"static/js/main.a6f1ce66.chunk.js","sourcesContent":["import React, { Component, ErrorInfo } from \"react\";\n\ninterface IErrorBoundaryProps {\n  children: JSX.Element;\n}\n\ninterface IErrorBoundaryState {\n  error?: Error;\n  errorInfo?: ErrorInfo;\n  hasError: boolean;\n}\n\nexport default class ErrorBoundary extends Component<\n  IErrorBoundaryProps,\n  IErrorBoundaryState\n> {\n  constructor(props: IErrorBoundaryProps) {\n    super(props);\n    this.state = {\n      hasError: false,\n    };\n  }\n\n  static getDerivedStateFromError(error: Error) {\n    return { hasError: true, error };\n  }\n\n  componentDidCatch(error: Error, errorInfo: ErrorInfo) {\n    this.setState({ errorInfo, error });\n  }\n\n  render() {\n    const { hasError } = this.state;\n    const { children } = this.props;\n\n    if (hasError) {\n      return (\n        <div>\n          <div>\n            <p>\n              There was an error in loading this page.\n              {/* eslint-disable-next-line jsx-a11y/no-static-element-interactions */}\n              <span\n                className=\"link\"\n                onClick={() => {\n                  global.window.location.reload();\n                }}\n              >\n                Reload this page\n              </span>\n            </p>\n          </div>\n        </div>\n      );\n    }\n\n    return children;\n  }\n}\n","import React from \"react\";\n\ninterface IProps {\n  children: JSX.Element;\n}\n\nconst MainLayout: React.FC<IProps> = ({ children }) => {\n  return children;\n};\n\nexport default MainLayout;\n","/**\n * Router\n */\n\nexport const MAIN_PATH: string = \"/\";\nexport const DASHBOARD: string = \"/dashboard\";\nexport const CREATE_NOTEPAD: string = \"/create\";\nexport const NOTEPAD_BY_ID: string = \"/notepads/:id\";\nexport const CREATE_ROUTE_FOR_NOTEPAD: (id: string) => string = (id: string) =>\n  `/notepads/${id}`;\n\n/**\n * Other App configs\n */\n\nexport const AUTHORIZE_TOKEN: string | undefined =\n  process.env.REACT_APP_GITHUB_AUTHORIZE_TOKEN;\nexport const GITHUB_API_URL: string | undefined =\n  process.env.REACT_APP_GITHUB_API_URL;\n","import React from \"react\";\nimport \"./Button.styles.scss\";\n\ninterface IProps {\n  text: string;\n  onClick: () => void;\n  disabled?: boolean;\n  className?: string;\n}\n\nconst Button: React.FC<IProps> = ({ text, ...rest }) => {\n  return <button {...rest}>{text}</button>;\n};\n\nexport default Button;\n","import React from \"react\";\nimport \"./Input.styles.scss\";\n\ninterface IProps {\n  placeholder: string;\n  name: string;\n  onChange?: (e: React.FormEvent<HTMLInputElement>) => void;\n  onBlur?: () => void;\n  value?: string;\n}\n\nconst Input: React.FC<IProps> = ({ placeholder, ...rest }) => {\n  return (\n    <div className=\"form__group field\">\n      <input placeholder={placeholder} className=\"form__field\" {...rest} />\n      <label htmlFor={placeholder} className=\"form__label\">\n        {placeholder}\n      </label>\n    </div>\n  );\n};\n\nexport default Input;\n","import React, { useRef, useEffect } from \"react\";\n\nconst EditableElement = (props: {\n  children: JSX.Element;\n  onChange: (text: string) => void;\n}): JSX.Element => {\n  const { onChange } = props;\n  const element = useRef<HTMLInputElement>();\n  let elements = React.Children.toArray(props.children);\n  if (elements.length > 1) {\n    throw Error(\"Can't have more than one child\");\n  }\n  const onBlur = () => {\n    const value = element.current?.value || element.current?.innerText;\n    if (onChange && value) {\n      onChange(value);\n    }\n  };\n\n  // @ts-ignore\n  elements = React.cloneElement(elements[0], {\n    contentEditable: true,\n    suppressContentEditableWarning: true,\n    ref: element,\n    onBlur,\n  });\n  // @ts-ignore\n  return elements;\n};\n\nexport default EditableElement;\n","import React from \"react\";\nimport \"./Tabs.styles.scss\";\n\ninterface IProps {\n  entries: {\n    title: string;\n    render: () => JSX.Element;\n  }[];\n}\n\nconst Tabs: React.FC<IProps> = ({ entries }) => {\n  const [activeTab, setActiveTab] = React.useState(entries[0].title);\n  return (\n    <>\n      <div className=\"tab\">\n        {entries.map((entry) => (\n          <button\n            className={entry.title === activeTab ? \"active-tab\" : \"\"}\n            key={entry.title}\n            onClick={() => setActiveTab(entry.title)}\n          >\n            {entry.title}\n          </button>\n        ))}\n      </div>\n\n      {entries.map((entry) => (\n        <div\n          className={`tabcontent ${activeTab === entry.title ? \"active\" : \"\"}`}\n          key={entry.title}\n        >\n          {entry.render()}\n        </div>\n      ))}\n    </>\n  );\n};\n\nexport default Tabs;\n","import {\n  LineChart,\n  Line,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  Legend,\n  ResponsiveContainer,\n  Brush,\n} from \"recharts\";\n\ninterface IProps {\n  title: string;\n  data: any;\n}\n\nconst Chart: React.FC<IProps> = ({ title, data }) => {\n  return (\n    <>\n      <div className=\"flex space-beetwen\">\n        <h1>{title}</h1>\n      </div>\n      <ResponsiveContainer width=\"100%\" height=\"100%\">\n        <LineChart\n          width={500}\n          height={300}\n          data={data}\n          margin={{\n            top: 5,\n            right: 30,\n            left: 20,\n            bottom: 5,\n          }}\n        >\n          <CartesianGrid strokeDasharray=\"3 3\" />\n          <XAxis dataKey=\"name\" />\n          <YAxis />\n          <Tooltip />\n          <Legend />\n          <Line type=\"monotone\" dataKey=\"length\" stroke=\"#82ca9d\" />\n          <Brush />\n        </LineChart>\n      </ResponsiveContainer>\n    </>\n  );\n};\n\nexport default Chart;\n","import React from \"react\";\nimport { EditableElement } from \"..\";\nimport { INote, INotepad } from \"../../../modules/Notepad/Interfaces\";\nimport \"./Note.styles.scss\";\n\ninterface IProps {\n  data: INote;\n  onNoteChange: (key: string, value: string, id: string) => void;\n  onNoteRemove: (data: INote) => void;\n}\n\nconst Note: React.FC<IProps> = ({ data, onNoteChange, onNoteRemove }) => {\n  const [saved, setSaved] = React.useState(false);\n\n  const handleChange = (key: string, value: string, id: string) => {\n    onNoteChange(key, value, id);\n    setSaved(true);\n    setTimeout(() => {\n      setSaved(false);\n    }, 1000);\n  };\n\n  return (\n    <li>\n      <div className=\"wrapper\">\n        <i className=\"fa fa-remove\" onClick={() => onNoteRemove(data)} />\n        <EditableElement\n          onChange={(value: string) => handleChange(\"title\", value, data.id)}\n        >\n          <div className=\"header\">{data.title}</div>\n        </EditableElement>\n        <EditableElement\n          onChange={(value: string) =>\n            handleChange(\"description\", value, data.id)\n          }\n        >\n          <p className=\"body\">{data.description}</p>\n        </EditableElement>\n        {saved && <i className=\"fa fa-check saved\">Saved</i>}\n      </div>\n    </li>\n  );\n};\n\nexport default Note;\n","import { INote, INotepad } from \"../../Interfaces\";\n\nexport const GET_NOTEPADS: string = \"GET_NOTEPADS\";\nexport const GET_NOTEPADS_SUCCESS: string = \"GET_NOTEPADS_SUCCESS\";\nexport const GET_NOTEPADS_FAILED: string = \"GET_NOTEPADS_FAILED\"; // todo implement functionallity\n\nexport const REMOVE_NOTEPAD_BY_ID: string = \"REMOVE_NOTEPAD_BY_ID\";\nexport const REMOVE_NOTEPAD_BY_ID_SUCCESS: string =\n  \"REMOVE_NOTEPAD_BY_ID_SUCCESS\";\n\nexport const ADD_NOTEPAD: string = \"ADD_NOTEPAD\";\nexport const ADD_NOTEPAD_SUCCESS: string = \"ADD_NOTEPAD_SUCCESS\";\n\nexport const EDIT_NOTEPAD: string = \"EDIT_NOTEPAD\";\nexport const EDIT_NOTEPAD_SUCCESS: string = \"EDIT_NOTEPAD_SUCCESS\";\n\nexport const GET_NOTEPAD_BY_ID: string = \"GET_NOTEPAD_BY_ID\";\nexport const GET_NOTEPAD_BY_ID_SUCCESS: string = \"GET_NOTEPAD_BY_ID_SUCCESS\";\n\nexport const REMOVE_NOTE_BY_ID: string = \"REMOVE_NOTE_BY_ID\";\nexport const REMOVE_NOTE_BY_ID_SUCCESS: string = \"REMOVE_NOTE_BY_ID_SUCCESS\";\n\nexport const getNotepads = () => ({ type: GET_NOTEPADS });\nexport const getNotepadsSuccess = (data: any) => ({\n  type: GET_NOTEPADS_SUCCESS,\n  payload: { data },\n});\n\nexport const removeNotepadById = (id: string) => ({\n  type: REMOVE_NOTEPAD_BY_ID,\n  payload: { id },\n});\n\nexport const removeNotepadByIdSucess = (data: string) => ({\n  type: REMOVE_NOTEPAD_BY_ID_SUCCESS,\n  payload: { data },\n});\n\nexport const addNotepad = (notepad: INotepad, cb: () => void) => ({\n  type: ADD_NOTEPAD,\n  payload: { notepad, cb },\n});\n\nexport const addNotepadSuccess = (data: INotepad) => ({\n  type: ADD_NOTEPAD_SUCCESS,\n  payload: { data },\n});\n\nexport const editNotepad = (data: any, id: string) => ({\n  type: EDIT_NOTEPAD,\n  payload: { data, id },\n});\n\nexport const editNotepadSuccess = (data: INotepad) => ({\n  type: EDIT_NOTEPAD_SUCCESS,\n  payload: { data },\n});\n\nexport const getNotepadById = (id: string) => ({\n  type: GET_NOTEPAD_BY_ID,\n  payload: { id },\n});\n\nexport const getNotepadByIdSuccess = (data: any) => ({\n  type: GET_NOTEPAD_BY_ID_SUCCESS,\n  payload: { data },\n});\n\nexport const removeNoteById = (data: INote, id: string) => ({\n  type: REMOVE_NOTE_BY_ID,\n  payload: { data, id },\n});\n\nexport const removeNoteByIdSuccess = (notepadId: string, noteId: string) => ({\n  type: REMOVE_NOTE_BY_ID_SUCCESS,\n  payload: { notepadId, noteId },\n});\n","export const GET_PUBLIC_GISTS: string = \"GET_PUBLIC_GISTS\";\nexport const GET_PUBLIC_GISTS_SUCCES: string = \"GET_PUBLIC_GISTS_SUCCES\";\n\nexport const getPublicGists = () => ({ type: GET_PUBLIC_GISTS });\nexport const getPublicGistsSuccess = (gistCreated: any, filesPerGist: any) => ({\n  type: GET_PUBLIC_GISTS_SUCCES,\n  payload: { gistCreated, filesPerGist },\n});\n","import moment from \"moment\";\nimport React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Button, Chart } from \"../../../common/components\";\nimport { RootState } from \"../../../redux/reducers\";\nimport { IGist } from \"../interfaces\";\nimport { getPublicGists } from \"../redux/actions\";\n\nconst Charts = () => {\n  const dispatch = useDispatch();\n  const [loading, setLoading] = React.useState(false);\n  const gistCreated: IGist[] = useSelector(\n    (state: RootState) => state.publicGists.gistCreated\n  );\n  const filesPerGist: IGist[] = useSelector(\n    (state: RootState) => state.publicGists.filesPerGist\n  );\n\n  React.useEffect(() => {\n    dispatch(getPublicGists());\n  }, [dispatch]);\n\n  const gistCreatedData = React.useMemo(() => {\n    return gistCreated.map((e: IGist) => ({\n      name: moment(new Date(+e.date)).format(\"DD MMMM hh:mm:ss\"),\n      length: e.data.length,\n    }));\n  }, [gistCreated]);\n\n  const filesPerGistData = React.useMemo(() => {\n    return filesPerGist.map((e: IGist) => ({\n      name: moment(e.created_at).format(\"DD MMMM hh:mm:ss\"),\n      length: Object.keys(e.files).length,\n    }));\n  }, [filesPerGist]);\n\n  const handleLoadMore = () => {\n    dispatch(getPublicGists());\n    setLoading(true);\n    // It's not a right way but have not enough time for implemetation )\n    setTimeout(() => {\n      setLoading(false);\n    }, 1000);\n  };\n\n  return (\n    <div className=\"charts\">\n      <Button\n        text={loading ? \"Loading...\" : \" Load more\"}\n        onClick={handleLoadMore}\n        disabled={loading}\n      />\n      <Chart title=\"Gists Created\" data={gistCreatedData} />\n      <Chart title=\"Files Per Gist\" data={filesPerGistData} />\n    </div>\n  );\n};\n\nexport default Charts;\n","import React from \"react\";\nimport { shallowEqual, useDispatch, useSelector } from \"react-redux\";\nimport { Button, Tabs } from \"../../common/components\";\nimport { useHistory } from \"react-router-dom\";\nimport { NotepadDemo } from \"..\";\nimport { CREATE_NOTEPAD } from \"../../configs/constants\";\nimport { INotepad } from \"../Notepad/Interfaces\";\nimport { getNotepads } from \"../Notepad/redux/actions\";\nimport Charts from \"./containers/Charts\";\nimport { RootState } from \"../../redux/reducers\";\nimport \"./Dashboard.styles.scss\";\n\nconst Dashboard = () => {\n  const history = useHistory();\n  const dispatch = useDispatch();\n\n  const notepads: INotepad[] = useSelector(\n    (state: RootState) => state.notepads.data,\n    shallowEqual\n  );\n\n  React.useEffect(() => {\n    dispatch(getNotepads());\n  }, [dispatch]);\n\n  return (\n    <div className=\"dashboard\">\n      <Tabs\n        entries={[\n          {\n            title: \"Notepads\",\n            render: () => (\n              <>\n                <div className=\"flex space-beetwen\">\n                  <h1>My Notepads</h1>\n                  <Button\n                    text={\"Create Notepad\"}\n                    onClick={() => history.push(CREATE_NOTEPAD)}\n                  />\n                </div>\n                <div className=\"notepads\">\n                  {notepads?.map((notepad: INotepad) => (\n                    <NotepadDemo\n                      title={`${notepad.title}`}\n                      notesCount={notepad.notesLength ?? 0}\n                      id={notepad.id}\n                      key={notepad.id}\n                      createdAt={notepad.createdAt}\n                    />\n                  ))}\n                  {!notepads.length ? (\n                    <h1>You don't have any notepads yet (</h1>\n                  ) : null}\n                </div>\n              </>\n            ),\n          },\n          {\n            title: \"Charts\",\n            render: () => <Charts />,\n          },\n        ]}\n      />\n    </div>\n  );\n};\n\nexport default Dashboard;\n","import moment from \"moment\";\nimport React from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport { CREATE_ROUTE_FOR_NOTEPAD } from \"../../configs/constants\";\nimport \"./Notepad.styles.scss\";\nimport { removeNotepadById } from \"./redux/actions\";\n\ninterface IProps {\n  title: string;\n  id: string;\n  notesCount: number;\n  createdAt: string | Date;\n}\n\nconst NotepadDemo: React.FC<IProps> = ({\n  id,\n  title,\n  notesCount,\n  createdAt,\n}) => {\n  const history = useHistory();\n  const dispatch = useDispatch();\n\n  const handleNotepadRemove = (e: any) => {\n    e.stopPropagation();\n    dispatch(removeNotepadById(id));\n  };\n\n  return (\n    <div\n      className=\"notepad2\"\n      onClick={() => history.push(CREATE_ROUTE_FOR_NOTEPAD(id))}\n    >\n      <i className=\"fa fa-remove\" onClick={handleNotepadRemove}></i>\n      <h3>{title}</h3>\n      <p>Notes: {notesCount}</p>\n      <p className=\"date\">{moment(createdAt).format(\"MMMM DD YYYY\")}</p>\n    </div>\n  );\n};\n\nexport default NotepadDemo;\n","import { IGist } from \"../modules/Dashboard/interfaces\";\n\nexport const generateId = () => {\n  return \"_\" + Math.random().toString(36).substr(2, 9);\n};\n\nexport const deepClone = <T>(data: T) => {\n  return JSON.parse(JSON.stringify(data));\n};\n\nexport const groupByDate = <T extends { created_at: string }>(\n  data: T[],\n  forSeconds: number\n) => {\n  const result: { [key: string]: T[] } = {};\n  let timeDiff = new Date(data[0].created_at).getTime() + forSeconds * 1000;\n\n  data.forEach((element) => {\n    const dateInMiliSeconds = new Date(element.created_at).getTime();\n    if (dateInMiliSeconds <= timeDiff) {\n      if (result[timeDiff]) {\n        result[timeDiff].push(element);\n      } else {\n        result[timeDiff] = [element];\n      }\n    } else {\n      timeDiff = dateInMiliSeconds + 5000;\n      result[timeDiff] = [element];\n    }\n  });\n\n  return Object.keys(result).map((date: string) => ({\n    date,\n    data: result[date],\n  }));\n};\n","import React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport { Note } from \"..\";\nimport { Button, Input } from \"../../common/components\";\nimport { MAIN_PATH } from \"../../configs/constants\";\nimport { RootState } from \"../../redux/reducers\";\nimport { deepClone, generateId } from \"../../utils/helperFunctions\";\nimport { INote, INotepad } from \"./Interfaces\";\nimport {\n  addNotepad,\n  editNotepad,\n  getNotepadById,\n  removeNoteById,\n} from \"./redux/actions\";\n\nimport \"./Notepad.styles.scss\";\n\ninterface IProps {\n  createMode?: boolean;\n}\n\nconst NotePad: React.FC<IProps> = ({ createMode }) => {\n  const [notes, setNotes] = React.useState<INote[]>([]);\n  const [title, setTitle] = React.useState(\"\");\n\n  const { id }: { id: string } = useParams();\n  const dispatch = useDispatch();\n  const history = useHistory();\n\n  const notepad: INotepad = useSelector(\n    (state: RootState) => state.notepads.idMap[id]\n  );\n\n  React.useEffect(() => {\n    if (!createMode) {\n      dispatch(getNotepadById(id));\n    }\n  }, [createMode, dispatch, id]);\n\n  React.useEffect(() => {\n    if (!notepad) return;\n    setTitle(notepad?.title);\n    setNotes(notepad?.notes);\n  }, [notepad]);\n\n  const handleAddNote = () => {\n    setNotes([\n      ...notes,\n      { title: \"TITLE\", description: \"Description\", id: generateId() },\n    ]);\n  };\n\n  const handleSaveNotepad = () => {\n    dispatch(\n      addNotepad(\n        { title, notes, id: generateId(), createdAt: new Date() },\n        () => history.push(MAIN_PATH)\n      )\n    );\n  };\n\n  const handleNoteChange = React.useCallback(\n    (key: string, value: string, id: string) => {\n      const notesClone = deepClone(notes);\n      const foundIndex = notesClone.findIndex((note: INote) => note.id === id);\n      if (value !== notesClone[foundIndex][key]) {\n        notesClone[foundIndex][key] = value;\n        setNotes(notesClone);\n        if (!createMode) {\n          dispatch(editNotepad(notesClone[foundIndex], notepad.id));\n        }\n      }\n    },\n    [notes, dispatch, notepad, createMode]\n  );\n\n  const handleNotepadNameChanged = () => {\n    if (createMode) return;\n    dispatch(editNotepad({ notepadName: title }, notepad.id));\n  };\n\n  const handleNoteRemove = React.useCallback(\n    (note) => {\n      dispatch(removeNoteById(note, notepad.id));\n    },\n    [notepad]\n  );\n\n  return (\n    <div>\n      <div className=\"header\">\n        <div className=\"back\" onClick={() => history.push(MAIN_PATH)}>\n          <img\n            src=\"https://static.thenounproject.com/png/3403548-200.png\"\n            alt=\"back\"\n          />\n          <h1>Dashboard</h1>\n        </div>\n        {createMode && (\n          <Button\n            text=\"Create notepad\"\n            onClick={handleSaveNotepad}\n            disabled={!title || !notes.length}\n          />\n        )}\n      </div>\n\n      <hr />\n\n      <div className=\"add-description flex space-beetwen\">\n        <Input\n          name=\"title\"\n          placeholder=\"Notepad name\"\n          onChange={(e) => setTitle(e.currentTarget.value)}\n          onBlur={handleNotepadNameChanged}\n          value={title}\n        />\n        <Button text=\"Add note\" onClick={handleAddNote} />\n      </div>\n      <div className=\"note-view\">\n        <ul>\n          {notes?.map((note) => (\n            <Note\n              key={note.id}\n              data={note}\n              onNoteChange={handleNoteChange}\n              onNoteRemove={handleNoteRemove}\n            />\n          ))}\n        </ul>\n      </div>\n    </div>\n  );\n};\n\nexport default NotePad;\n","import React from \"react\";\nimport { Switch, Route } from \"react-router-dom\";\nimport MainLayout from \"./common/layouts/MainLayout\";\nimport { MAIN_PATH, CREATE_NOTEPAD, NOTEPAD_BY_ID } from \"./configs/constants\";\nimport { Dashboard, Notepad } from \"./modules/\";\n\nconst Routes: React.FC = () => {\n  return (\n    <MainLayout>\n      <Switch>\n        <Route exact path={MAIN_PATH} component={Dashboard} />\n        <Route\n          exact\n          path={CREATE_NOTEPAD}\n          render={() => <Notepad createMode={true} />}\n        />\n        <Route exact path={NOTEPAD_BY_ID} component={Notepad} />\n      </Switch>\n    </MainLayout>\n  );\n};\n\nexport default Routes;\n","import React from \"react\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport Routes from \"./Routes\";\n\nimport \"./App.styles.scss\";\nimport { ErrorBoundary } from \"./common/components\";\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <ErrorBoundary>\n        <Routes />\n      </ErrorBoundary>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from \"web-vitals\";\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { PayloadAction } from \"@reduxjs/toolkit\";\nimport { deepClone, generateId } from \"../../../../utils/helperFunctions\";\nimport { INote, INotepad } from \"../../Interfaces\";\nimport {\n  ADD_NOTEPAD_SUCCESS,\n  GET_NOTEPADS_SUCCESS,\n  GET_NOTEPAD_BY_ID_SUCCESS,\n  REMOVE_NOTEPAD_BY_ID_SUCCESS,\n  REMOVE_NOTE_BY_ID_SUCCESS,\n} from \"../actions\";\n\nexport interface IProfileReducerState {\n  data: INotepad[];\n  idMap: { [key: string]: INote };\n}\n\nconst initialState: IProfileReducerState = {\n  data: [],\n  idMap: {},\n};\n\nconst notepadReducer = (\n  state = initialState,\n  action: PayloadAction<{ data?: any; notepadId?: string; noteId: string }>\n) => {\n  const { type, payload: { data, notepadId = \"\", noteId } = { data: [] } } =\n    action;\n  const idMapClone = deepClone(state.idMap);\n  switch (type) {\n    case GET_NOTEPADS_SUCCESS:\n      return {\n        ...state,\n        data,\n      };\n    case GET_NOTEPAD_BY_ID_SUCCESS:\n      idMapClone[data.id] = {\n        id: data.id,\n        title: data.description,\n        notes: Object.keys(data.files).map((key) => ({\n          title: key,\n          description: data.files[key].content,\n          id: generateId(),\n        })),\n      };\n\n      return {\n        ...state,\n        idMap: idMapClone,\n      };\n    case ADD_NOTEPAD_SUCCESS:\n      const stateClone: IProfileReducerState = deepClone(state);\n      stateClone.data.push(data);\n      stateClone.idMap[data.id] = data;\n      return stateClone;\n\n    case REMOVE_NOTEPAD_BY_ID_SUCCESS:\n      return {\n        ...state,\n        data: state.data.filter(\n          (notepad) => notepad.id !== action.payload.data\n        ),\n      };\n\n    case REMOVE_NOTE_BY_ID_SUCCESS:\n      idMapClone[notepadId].notes = idMapClone[notepadId].notes.filter(\n        (note: INote) => note.id !== noteId\n      );\n\n      return {\n        ...state,\n        idMap: idMapClone,\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default notepadReducer;\n","import { PayloadAction } from \"@reduxjs/toolkit\";\nimport { IGist } from \"../../interfaces\";\nimport { GET_PUBLIC_GISTS_SUCCES } from \"../actions\";\n\nexport interface IProfileReducerState {\n  filesPerGist: IGist[];\n  gistCreated: IGist[];\n  page: number;\n}\n\nconst initialState: IProfileReducerState = {\n  filesPerGist: [],\n  gistCreated: [],\n  page: 1,\n};\n\nconst gistsReducer = (\n  state = initialState,\n  action: PayloadAction<{ gistCreated: any; filesPerGist: any }>\n) => {\n  const { type, payload } = action;\n  switch (type) {\n    case GET_PUBLIC_GISTS_SUCCES:\n      return {\n        ...state,\n        gistCreated: [...payload.gistCreated, ...state.gistCreated],\n        filesPerGist: [...payload.filesPerGist, ...state.filesPerGist],\n        page: state.page + 1,\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default gistsReducer;\n","/**\n *  FILE: REDUX ROOT REDUCER\n **/\n\nimport { combineReducers } from \"redux\";\n\n// All Reducers - '../../containers/*/reducers'\nimport notePadsReducer from \"../../modules/Notepad/redux/reducer/NotepadsReducer\";\nimport gistsReducer from \"../../modules/Dashboard/redux/reducer/GistsReducer\";\n\nconst rootReducer = combineReducers({\n  notepads: notePadsReducer,\n  publicGists: gistsReducer,\n});\n\nexport type RootState = ReturnType<typeof rootReducer>;\n\nexport default rootReducer;\n","import { AUTHORIZE_TOKEN, GITHUB_API_URL } from \"../../configs/constants\";\nimport { INotepad } from \"../../modules/Notepad/Interfaces\";\nimport HttpClient from \"./HttpClient\";\n\nclass GithubApiClient extends HttpClient {\n  constructor() {\n    super({\n      baseURL: GITHUB_API_URL,\n      headers: {\n        Authorization: `token ${AUTHORIZE_TOKEN}`,\n      },\n    });\n  }\n\n  get notepads() {\n    return {\n      get: () => this.get(\"/gists\"),\n      getById: (id: string) => this.get(`/gists/${id}`),\n      delete: (id: string) => this.delete(`/gists/${id}`),\n      create: (notepad: INotepad) => this.post(\"/gists\", notepad),\n      update: (notepad: any) => this.patch(`/gists/${notepad.id}`, notepad),\n    };\n  }\n\n  get gists() {\n    return {\n      getPublicGists: (page: number) => this.get(`/gists/public?page=${page}`),\n    };\n  }\n}\n\nexport default GithubApiClient;\n","interface IOptions {\n  baseURL?: string;\n  headers?: Object;\n}\n\nclass HttpClient {\n  private _baseURL: IOptions[\"baseURL\"];\n  private _headers: IOptions[\"headers\"];\n\n  constructor(options: IOptions = {}) {\n    this._baseURL = options.baseURL || \"\";\n    this._headers = options.headers || {};\n  }\n\n  async _fetchJSON(endpoint: string, options = {}) {\n    const res = await fetch(this._baseURL + endpoint, {\n      ...options,\n      // @ts-ignore\n      headers: this._headers,\n    });\n\n    if (!res.ok) throw new Error(res.statusText);\n\n    if (res.status !== 204) return res.json();\n\n    return undefined;\n  }\n\n  get(endpoint: string, options = {}) {\n    return this._fetchJSON(endpoint, {\n      ...options,\n      method: \"GET\",\n    });\n  }\n\n  post<T>(endpoint: string, body: T, options = {}) {\n    return this._fetchJSON(endpoint, {\n      ...options,\n      body: body ? JSON.stringify(body) : undefined,\n      method: \"POST\",\n    });\n  }\n\n  put<T>(endpoint: string, body: T, options = {}) {\n    return this._fetchJSON(endpoint, {\n      ...options,\n      body: body ? JSON.stringify(body) : undefined,\n      method: \"PUT\",\n    });\n  }\n\n  patch<T>(endpoint: string, operations: T, options = {}) {\n    return this._fetchJSON(endpoint, {\n      parseResponse: false,\n      ...options,\n      body: JSON.stringify(operations),\n      method: \"PATCH\",\n    });\n  }\n\n  delete(endpoint: string, options = {}) {\n    return this._fetchJSON(endpoint, {\n      parseResponse: false,\n      ...options,\n      method: \"DELETE\",\n    });\n  }\n}\n\nexport default HttpClient;\n","export const adaptNotepads = (data: any) => {\n  return data.map((notepad: any) => ({\n    id: notepad.id,\n    title: notepad.description,\n    notesLength: Object.keys(notepad.files).length,\n    createdAt: notepad.created_at,\n  }));\n};\n","import { PayloadAction } from \"@reduxjs/toolkit\";\nimport { takeLatest, call, put } from \"redux-saga/effects\";\nimport GithubApiClient from \"../../../../common/service/GithubApiClient\";\nimport { adaptNotepads } from \"../../dataAdapter/dataAdapter\";\nimport { INote, INotepad, INotepadFile } from \"../../Interfaces\";\nimport {\n  addNotepadSuccess,\n  ADD_NOTEPAD,\n  EDIT_NOTEPAD,\n  getNotepadByIdSuccess,\n  getNotepadsSuccess,\n  GET_NOTEPADS,\n  GET_NOTEPAD_BY_ID,\n  removeNoteByIdSuccess,\n  removeNotepadByIdSucess,\n  REMOVE_NOTEPAD_BY_ID,\n  REMOVE_NOTE_BY_ID,\n} from \"../actions\";\n\nconst GithubApi = new GithubApiClient();\n\nexport function* getNotepads() {\n  try {\n    const data: Promise<Response> = yield call(GithubApi.notepads.get);\n    yield put(getNotepadsSuccess(adaptNotepads(data)));\n  } catch (e) {\n    console.error(e);\n  }\n}\n\nexport function* removeNotepadById(action: PayloadAction<{ id: string }>) {\n  const {\n    payload: { id },\n  } = action;\n  try {\n    yield call(GithubApi.notepads.delete, id);\n    yield put(removeNotepadByIdSucess(id));\n  } catch (e) {\n    console.error(e);\n  }\n}\n\nexport function* editNotepadById(\n  action: PayloadAction<{\n    data: { notepadName?: string; title?: string; description?: string };\n    id: string;\n  }>\n) {\n  const {\n    payload: { data, id },\n  } = action;\n  try {\n    const { notepadName, title, description } = data;\n    if (notepadName) {\n      yield call(GithubApi.notepads.update, {\n        id,\n        description: data.notepadName,\n      });\n    } else {\n      yield call(GithubApi.notepads.update, {\n        id,\n        files: {\n          [`${title}`]: {\n            content: description,\n          },\n        },\n      });\n    }\n  } catch (e) {\n    console.error(e);\n  }\n}\n\nexport function* addNotepad(\n  action: PayloadAction<{ notepad: INotepad; cb: () => void }>\n) {\n  const {\n    payload: { notepad, cb },\n  } = action;\n\n  const files: INotepadFile = {};\n\n  notepad.notes.forEach((note) => {\n    files[note.title] = {\n      content: note.description,\n    };\n  });\n  try {\n    //@ts-ignore\n    const data: INotepad = yield call(GithubApi.notepads.create, {\n      description: notepad.title,\n      files,\n    });\n    yield put(addNotepadSuccess(data));\n\n    cb();\n  } catch (e) {\n    console.error(e);\n  }\n}\n\nexport function* getNotepadById(action: PayloadAction<{ id: string }>) {\n  const {\n    payload: { id },\n  } = action;\n  try {\n    const data: Promise<any> = yield call(GithubApi.notepads.getById, id);\n    yield put(getNotepadByIdSuccess(data));\n  } catch (e) {\n    console.error(e);\n  }\n}\n\nexport function* removeNoteById(\n  action: PayloadAction<{ data: INote; id: string }>\n) {\n  const {\n    payload: { id, data },\n  } = action;\n  try {\n    yield call(GithubApi.notepads.update, {\n      id,\n      files: {\n        [`${data.title}`]: {\n          content: \"\",\n        },\n      },\n    });\n    yield put(removeNoteByIdSuccess(id, data.id));\n  } catch (e) {\n    console.error(e);\n  }\n}\n\nexport default function* fetchDataWatcher() {\n  yield takeLatest(ADD_NOTEPAD, addNotepad);\n  yield takeLatest(GET_NOTEPADS, getNotepads);\n  yield takeLatest(REMOVE_NOTEPAD_BY_ID, removeNotepadById);\n  yield takeLatest(EDIT_NOTEPAD, editNotepadById);\n  yield takeLatest(GET_NOTEPAD_BY_ID, getNotepadById);\n  yield takeLatest(REMOVE_NOTE_BY_ID, removeNoteById);\n}\n","import { takeLatest, call, put, select } from \"redux-saga/effects\";\nimport GithubApiClient from \"../../../../common/service/GithubApiClient\";\nimport { RootState } from \"../../../../redux/reducers\";\nimport { groupByDate } from \"../../../../utils/helperFunctions\";\nimport { IGist } from \"../../interfaces\";\nimport { getPublicGistsSuccess, GET_PUBLIC_GISTS } from \"../actions\";\n\nconst GithubApi = new GithubApiClient();\n\nexport function* getPublicGists() {\n  try {\n    const gistCreatedPage: number = yield select(\n      (store: RootState) => store.publicGists.page\n    );\n\n    const data: IGist[] = yield call(\n      GithubApi.gists.getPublicGists,\n      gistCreatedPage\n    );\n    yield put(getPublicGistsSuccess(groupByDate(data.reverse(), 5), data));\n  } catch (e) {\n    console.error(e);\n  }\n}\n\nexport default function* fetchDataWatcher() {\n  yield takeLatest(GET_PUBLIC_GISTS, getPublicGists);\n}\n","import { all, fork } from \"redux-saga/effects\";\n\nimport notepadSaga from \"./../../modules/Notepad/redux/saga/NotepadSaga\";\nimport gistsSaga from \"./../../modules/Dashboard/redux/saga/GistsSaga\";\n\nfunction* rootSaga() {\n  yield all([fork(notepadSaga), fork(gistsSaga)]);\n}\n\nexport default rootSaga;\n","import { createStore, applyMiddleware, compose } from \"redux\";\nimport createSagaMiddleware from \"redux-saga\";\nimport rootReducer from \"./reducers/\";\nimport rootSaga from \"./sagas\";\n\nfunction setupStore(initialState = {}) {\n  // Middleware\n  const sagaMiddleware = createSagaMiddleware();\n\n  const middleware = applyMiddleware(...[sagaMiddleware]);\n\n  const isDevelopment = process.env.NODE_ENV !== \"production\";\n\n  const composeEnhancers = isDevelopment\n    ? (window as any).__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\n    : compose;\n\n  const realMiddleware = isDevelopment\n    ? composeEnhancers(middleware)\n    : middleware;\n\n  // Store\n  const store = createStore(rootReducer, initialState, realMiddleware);\n\n  // Sagas\n  sagaMiddleware.run(rootSaga);\n\n  return store;\n}\n\n// export type AppState = ReturnType<typeof rootReducer>;\n\nexport default setupStore;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { Provider } from \"react-redux\";\n\nimport reportWebVitals from \"./reportWebVitals\";\nimport setupStore from \"./redux/setupStore\";\n\nconst OLD_REDUX_STORE = localStorage.getItem(\"oldReduxState\");\n\nlet REDUX_INITIAL_STATE = {};\n\nif (OLD_REDUX_STORE) {\n  REDUX_INITIAL_STATE = JSON.parse(OLD_REDUX_STORE);\n}\n\nconst store = setupStore(REDUX_INITIAL_STATE);\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}